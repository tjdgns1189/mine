<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.spring.mall.QnaBoardMapper">
<!-- namespace : dao 클래스의 sqlSession과 연결하기 위한 키로 사용 -->

	<!-- 
	* mapper 태그
	<insert>, <select>, <update>, <delete>
	dao - sqlSession의 함수(insert, selectOne, selectList, update, delete)
	와 매핑되어 쿼리를 수행
	
	* mapper 태그의 id 속성
	dao 클래스의 sqlSession 특정 함수와 연결하기 위해 사용
	
	* mapper 쿼리 특징
	${key 이름} : mybatis-config.xml의 property - name과 매칭. DB 테이블의 컬럼
	#{key 이름} : dao 클래스의 sqlSession에서 전송받은 데이터 변수명(입력받은 데이터)
	 -->
	 
	 <insert id="insert">
	 	insert into ${qna_board}
	 	(${memberId}, ${qnaBoardTitle}, ${qnaBoardContent})
	 	values (#{memberId}, #{qnaBoardTitle}, #{qnaBoardContent})
	 </insert>
	 
	 <select id="select_all" resultType="QnaBoardVO">
	 	select * from ${qna_board}
	 	order by ${qnaBoardId} desc
	 </select>
	 
	 <select id="select_by_qna_board_id" resultType="QnaBoardVO">
	 	select * from ${qna_board} where ${qnaBoardId} = #{qnaBoardId}
	 </select>
	 
	 <update id="update">
	 	update ${qna_board}
	 	set ${qnaBoardTitle} = #{qnaBoardTitle}, ${qnaBoardContent} = #{qnaBoardContent}
	 	where ${qnaBoardId} = #{qnaBoardId}
	 </update>
	 
	 <delete id="delete">
	 	delete from ${qna_board}
	 	where ${qnaBoardId} = #{qnaBoardId}
	 </delete>
	
     <select id="paging" resultType="QnaBoardVO">
	 	select ${qnaBoardId}, ${memberId}, ${qnaBoardTitle}, ${qnaBoardContent}, ${qnaBoardCreatedDate}
	 	from(
	 		select rownum rn, a.* from(
	 			select * from ${qna_board} order by ${qnaBoardId} desc	
	 		)a
	 	) where rn between #{start} and #{end}
	 </select>
	 
	 <select id="total_count" resultType="Integer">
	 	select count(*) total_cnt from ${qna_board}
	 </select>
	 
	 <select id="select_by_qna_memberid" resultType="QnaBoardVO">
	 	select * from ${qna_board}
	 	where ${memberId} like #{memberId}
	 </select>
	 
	 <select id="select_by_title_content" resultType="QnaBoardVO">
	 	select * from ${qna_board}
	 	where ${qnaBoardTitle} like #{keyword} or
	 		${qnaBoardContent} like #{keyword}
	 		order by ${qnaBoardId} desc
	 </select>
</mapper>













